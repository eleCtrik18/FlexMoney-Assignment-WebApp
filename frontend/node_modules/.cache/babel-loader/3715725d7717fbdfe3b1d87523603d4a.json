{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\FlexMoney-Assignment\\\\frontend\\\\src\\\\Components\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './Form.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Form() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [batchNumber, setBatchNumber] = useState();\n  useEffect(() => {\n    localStorage.clear();\n  }, []);\n\n  const SaveData = () => {\n    //Changing startdate format to mm/dd/year\n    var newStartDate = \"\";\n    newStartDate += startDate[5] + startDate[6] + '/' + startDate[8] + startDate[9] + '/' + startDate.substr(0, 4); //Store the data on the database by calling the REST API\n\n    fetch(\"http://localhost:8000/user\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"name\": name,\n        \"age\": Number(age),\n        \"email\": email,\n        \"startDate\": newStartDate,\n        \"feesPaid\": 500,\n        \"batchNumber\": batchNumber\n      })\n    }).then(response => response.json()) //Response from the REST API\n    .then(responseData => {\n      const message_id = responseData.message_id; //If successful updation is there or successfull insertion is there\n\n      if (message_id == \"1\" || message_id == \"3\") {\n        //Store the information locally to be used later\n        localStorage.setItem(\"name\", name);\n        localStorage.setItem(\"age\", Number(age));\n        localStorage.setItem(\"email\", email);\n        localStorage.setItem(\"startDate\", newStartDate);\n        localStorage.setItem(\"batchNumber\", batchNumber); //Move to the payment dialogue box\n\n        document.querySelector(\".formContainer\").style.display = \"none\";\n        document.querySelector(\".paymentContainer\").style.display = \"flex\";\n      } //Else anything else happens then create a mockup box\n      else {\n        const message = responseData.message;\n        window.alert(message); //If plan is active then simply reload the application\n\n        if (message_id == \"2\") {\n          window.location.reload();\n        }\n      }\n    }).catch(err => {\n      console.log(`Error in accessing the server is ${err}`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your Name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      autocomplete: \"off\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"string\",\n      placeholder: \"Enter your Age\",\n      value: age,\n      onChange: e => setAge(e.target.value),\n      min: \"18\",\n      max: \"65\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      placeholder: \"Starting date\",\n      value: startDate,\n      onChange: e => setStartDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"batchTiming\",\n      children: [/*#__PURE__*/_jsxDEV(\"h\", {\n        children: \"Select batch timing:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"batchOptions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"first\",\n            name: \"batchNo\",\n            value: \"1\",\n            onChange: e => setBatchNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"first\",\n            children: \"6 AM-7 AM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"second\",\n            name: \"batchNo\",\n            value: \"2\",\n            onChange: e => setBatchNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"second\",\n            children: \"7 AM-8 AM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"third\",\n            name: \"batchNo\",\n            value: \"3\",\n            onChange: e => setBatchNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"third\",\n            children: \"8 AM-9 AM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"fourth\",\n            name: \"batchNo\",\n            value: \"4\",\n            onChange: e => setBatchNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"fourth\",\n            children: \"5 PM-6 PM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toPayment\",\n      onClick: SaveData,\n      children: \"Continue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"12w9KaaEKx6r3YffzvFO/8yPCdY=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/singh/FlexMoney-Assignment/frontend/src/Components/Form.jsx"],"names":["React","useState","useEffect","Form","name","setName","age","setAge","email","setEmail","startDate","setStartDate","batchNumber","setBatchNumber","localStorage","clear","SaveData","newStartDate","substr","fetch","method","headers","body","JSON","stringify","Number","then","response","json","responseData","message_id","setItem","document","querySelector","style","display","message","window","alert","location","reload","catch","err","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Form.css';\r\n\r\n\r\nfunction Form() {\r\n    const [name, setName] = useState(\"\")\r\n    const [age, setAge] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [startDate, setStartDate] = useState(\"\")\r\n    const [batchNumber, setBatchNumber] = useState()\r\n    \r\n    useEffect(() => {\r\n        localStorage.clear()\r\n    }, [])\r\n    const SaveData = () => {\r\n        //Changing startdate format to mm/dd/year\r\n        var newStartDate = \"\"\r\n        newStartDate += startDate[5] + startDate[6] + '/' + startDate[8] + startDate[9] + '/' + startDate.substr(0, 4)\r\n\r\n        //Store the data on the database by calling the REST API\r\n        fetch(\"http://localhost:8000/user\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"name\": name,\r\n                \"age\": Number(age),\r\n                \"email\": email,\r\n                \"startDate\": newStartDate,\r\n                \"feesPaid\": 500,\r\n                \"batchNumber\": batchNumber\r\n            })\r\n        }).then((response) => response.json())\r\n            //Response from the REST API\r\n            .then((responseData) => {\r\n                const message_id = responseData.message_id\r\n\r\n                //If successful updation is there or successfull insertion is there\r\n                if (message_id == \"1\" || message_id == \"3\") {\r\n                    //Store the information locally to be used later\r\n                    localStorage.setItem(\"name\", name)\r\n                    localStorage.setItem(\"age\", Number(age))\r\n                    localStorage.setItem(\"email\", email)\r\n                    localStorage.setItem(\"startDate\", newStartDate)\r\n                    localStorage.setItem(\"batchNumber\", batchNumber)\r\n                    //Move to the payment dialogue box\r\n                    document.querySelector(\".formContainer\").style.display = \"none\"\r\n                    document.querySelector(\".paymentContainer\").style.display = \"flex\"\r\n                }\r\n                //Else anything else happens then create a mockup box\r\n                else {\r\n                    const message = responseData.message\r\n                    window.alert(message)\r\n                    //If plan is active then simply reload the application\r\n                    if (message_id == \"2\") {\r\n                        window.location.reload()\r\n                    }\r\n                }\r\n            }).catch((err) => {\r\n                console.log(`Error in accessing the server is ${err}`)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"formContainer\">\r\n            <input type=\"text\"\r\n                placeholder=\"Enter your Name\"\r\n                value={name}\r\n                onChange={((e) => setName(e.target.value))}\r\n                autocomplete=\"off\"\r\n            />\r\n            <input type=\"string\"\r\n                placeholder=\"Enter your Age\"\r\n                value={age}\r\n                onChange={((e) => setAge(e.target.value))}\r\n                min=\"18\"\r\n                max=\"65\"\r\n            />\r\n            <input type=\"text\"\r\n                placeholder=\"Enter your Email\"\r\n                value={email}\r\n                onChange={((e) => setEmail(e.target.value))}\r\n            />\r\n            <input type=\"date\"\r\n                placeholder=\"Starting date\"\r\n                value={startDate}\r\n                onChange={((e) => setStartDate(e.target.value))}\r\n            />\r\n            <div className=\"batchTiming\">\r\n                <h>Select batch timing:</h>\r\n                <div className=\"batchOptions\">\r\n                    <div>\r\n                        <input type=\"radio\" id=\"first\" name=\"batchNo\" value=\"1\" onChange={(e) => setBatchNumber(e.target.value)} />\r\n                        <label for=\"first\">6 AM-7 AM</label><br />\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"radio\" id=\"second\" name=\"batchNo\" value=\"2\" onChange={(e) => setBatchNumber(e.target.value)} />\r\n                        <label for=\"second\">7 AM-8 AM</label><br />\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"radio\" id=\"third\" name=\"batchNo\" value=\"3\" onChange={(e) => setBatchNumber(e.target.value)} />\r\n                        <label for=\"third\">8 AM-9 AM</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"radio\" id=\"fourth\" name=\"batchNo\" value=\"4\" onChange={(e) => setBatchNumber(e.target.value)} />\r\n                        <label for=\"fourth\">5 PM-6 PM</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button className=\"toPayment\" onClick={SaveData}>Continue</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n"]},"metadata":{},"sourceType":"module"}