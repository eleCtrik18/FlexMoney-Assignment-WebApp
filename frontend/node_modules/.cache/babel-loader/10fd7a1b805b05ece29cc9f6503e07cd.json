{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\singh\\\\FlexMoney-Assignment\\\\frontend\\\\src\\\\Components\\\\Payment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Payment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Payment() {\n  _s();\n\n  const [mode, setMode] = useState(\"\");\n  const [upiId, setUpiId] = useState(\"\");\n  const [cardName, setCardName] = useState(\"\");\n  const [expDate, setExpCard] = useState(\"\");\n  const [accountNo, setAccountNo] = useState(\"\");\n  const [IFSCCode, setIfscCode] = useState(\"\"); //Implement the CompletePayment function as provided\n\n  const CompletePayment = () => {\n    //Store the data on database by calling the REST API\n    fetch('http://localhost:8000/payment', {\n      \"method\": \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        \"mode\": mode,\n        \"card\": {\n          \"holderName\": cardName,\n          \"expirationDate\": expDate,\n          \"cardNo\": accountNo,\n          \"cvvCode\": IFSCCode\n        },\n        \"upiId\": upiId,\n        \"email\": localStorage.getItem(\"email\")\n      })\n    }).then(response => response.json()) //Response from the REST API\n    .then(responseData => {\n      const message_id = responseData.message_id; //If data is updated or stored successfully\n\n      if (message_id == 1 || message_id == 3) {\n        document.querySelector(\".paymentContainer\").style.display = \"none\";\n        document.querySelector(\".completionContainer\").style.display = \"flex\";\n      } //Else create mock up box for any other response\n      else {\n        const message = responseData.message;\n        window.alert(message);\n      }\n    }).catch(err => {\n      console.log(`Error in accessing the server is ${err}`);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"paymentContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"amountDisclaimer\",\n      children: \"Total amount to be paid: \\u20B9500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"optionsHeader\",\n      children: \"Choose Payment mode:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cardDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"optionDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"card\",\n            name: \"optionNo\",\n            value: mode,\n            onChange: e => setMode('card')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"labels\",\n            for: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Debit/ATM Card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cardDetailsDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"cardName\",\n            name: \"cardName\",\n            value: cardName,\n            onChange: e => setCardName(e.target.value),\n            placeholder: \"Card holder's name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"expDate\",\n            name: \"expDate\",\n            value: expDate,\n            onChange: e => setExpCard(e.target.value),\n            placeholder: \"Expiration date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"accountNo\",\n            name: \"accountNo\",\n            value: accountNo,\n            onChange: e => setAccountNo(e.target.value),\n            placeholder: \"Card Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"IFSCCode\",\n            name: \"IFSCCode\",\n            value: IFSCCode,\n            onChange: e => setIfscCode(e.target.value),\n            placeholder: \"CVV Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upiDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"optionDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"UPI\",\n            name: \"optionNo\",\n            value: mode,\n            onChange: e => setMode('upi')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"labels\",\n            for: \"UPI\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"UPI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 61\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"UPI_ID\",\n          name: \"upi_id\",\n          value: upiId,\n          onChange: e => setUpiId(e.target.value),\n          placeholder: \"UPI Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toCompletion\",\n        onClick: CompletePayment,\n        children: \"Complete Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Payment, \"KbaLtuhUSiSgnWwYUa+6yLu/k6w=\");\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["C:/Users/singh/FlexMoney-Assignment/frontend/src/Components/Payment.jsx"],"names":["React","useState","Payment","mode","setMode","upiId","setUpiId","cardName","setCardName","expDate","setExpCard","accountNo","setAccountNo","IFSCCode","setIfscCode","CompletePayment","fetch","headers","body","JSON","stringify","localStorage","getItem","then","response","json","responseData","message_id","document","querySelector","style","display","message","window","alert","catch","err","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './Payment.css';\r\n\r\nfunction Payment() {\r\n    const [mode, setMode] = useState(\"\")\r\n    const [upiId, setUpiId] = useState(\"\")\r\n    const [cardName, setCardName] = useState(\"\")\r\n    const [expDate, setExpCard] = useState(\"\")\r\n    const [accountNo, setAccountNo] = useState(\"\")\r\n    const [IFSCCode, setIfscCode] = useState(\"\")\r\n\r\n    //Implement the CompletePayment function as provided\r\n    const CompletePayment = () => {\r\n\r\n        //Store the data on database by calling the REST API\r\n        fetch('http://localhost:8000/payment', {\r\n            \"method\": \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"mode\": mode,\r\n                \"card\": {\r\n                    \"holderName\": cardName,\r\n                    \"expirationDate\": expDate,\r\n                    \"cardNo\": accountNo,\r\n                    \"cvvCode\": IFSCCode\r\n                },\r\n                \"upiId\": upiId,\r\n                \"email\": localStorage.getItem(\"email\")\r\n            })\r\n        }).then((response) => response.json())\r\n            //Response from the REST API\r\n            .then((responseData) => {\r\n                const message_id = responseData.message_id\r\n                //If data is updated or stored successfully\r\n                if (message_id == 1 || message_id == 3) {\r\n                    document.querySelector(\".paymentContainer\").style.display = \"none\"\r\n                    document.querySelector(\".completionContainer\").style.display = \"flex\"\r\n                }\r\n                //Else create mock up box for any other response\r\n                else {\r\n                    const message = responseData.message\r\n                    window.alert(message)\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(`Error in accessing the server is ${err}`)\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"paymentContainer\">\r\n            <h4 className=\"amountDisclaimer\">Total amount to be paid: ₹500</h4>\r\n            <h4 className=\"optionsHeader\">Choose Payment mode:</h4>\r\n            <div>\r\n                <div className=\"cardDiv\">\r\n                    <div className=\"optionDiv\">\r\n                        <input type=\"radio\" id=\"card\" name=\"optionNo\"\r\n                            value={mode}\r\n                            onChange={((e) => setMode('card'))}\r\n                        />\r\n                        <label className='labels' for=\"card\"><b>Debit/ATM Card</b></label>\r\n                    </div>\r\n                    <div className=\"cardDetailsDiv\">\r\n                        <input type=\"text\" id=\"cardName\" name=\"cardName\"\r\n                            value={cardName}\r\n                            onChange={((e) => setCardName(e.target.value))}\r\n                            placeholder=\"Card holder's name\"\r\n                        />\r\n                        <input type=\"text\" id=\"expDate\" name=\"expDate\"\r\n                            value={expDate}\r\n                            onChange={((e) => setExpCard(e.target.value))}\r\n                            placeholder=\"Expiration date\"\r\n                        />\r\n                        <input type=\"text\" id=\"accountNo\" name=\"accountNo\"\r\n                            value={accountNo}\r\n                            onChange={((e) => setAccountNo(e.target.value))}\r\n                            placeholder=\"Card Number\"\r\n                        />\r\n                        <input type=\"password\" id=\"IFSCCode\" name=\"IFSCCode\"\r\n                            value={IFSCCode}\r\n                            onChange={((e) => setIfscCode(e.target.value))}\r\n                            placeholder=\"CVV Code\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"upiDiv\">\r\n                    <div className=\"optionDiv\">\r\n                        <input type=\"radio\" id=\"UPI\" name=\"optionNo\"\r\n                            value={mode}\r\n                            onChange={((e) => setMode('upi'))}\r\n                        />\r\n                        <label className='labels' for=\"UPI\"><b>UPI</b></label>\r\n                    </div>\r\n                    <input type=\"text\" id=\"UPI_ID\" name=\"upi_id\"\r\n                        value={upiId}\r\n                        onChange={((e) => setUpiId(e.target.value))}\r\n                        placeholder=\"UPI Id\"\r\n                    />\r\n                </div>\r\n                <button className=\"toCompletion\" onClick={CompletePayment}>Complete Payment</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n"]},"metadata":{},"sourceType":"module"}